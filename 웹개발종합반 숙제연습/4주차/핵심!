<aside>
⛔ 토글 정보

- GET, POST 데이터 전달 개념
    
    <aside>
    💡 **GET 방식**은 클라이언트가 서버로 데이터를 요청하기 위해 사용되는 Method
    **GET 요청을 할 때는** Body 부분은 비어있고 헤더에 Body의 콘텐츠 타입을 명시하는 Content-Type 헤더 필드도 적지 않습니다. 
    URL뒤에 쿼리 스트링(Key와 Value)을 붙이고 HTTP 패킷의 헤더에 포함해서 서버에 데이터를 요청합니다.
    
    </aside>
    
    <aside>
    ⛔ **GET 방식 특징**
    
    - URL에 쿼리 스트링(데이터)을 붙여서 서버에 전송
    - 데이터를 Header(헤더)에 포함하여 전송
    - URL에 정보들이 그대로 노출되기 때문에 POST 방식보다 상대적으로 보안에 취약
    - 캐싱이 가능
    - POST 방식보다 상대적으로 전송 속도가 빠름
    - 전송하는 데이터양에 한계가 있음 (브라우저마다 GET 요청 길이 제한 존재)
    - 브라우저 히스토리에 기록이 남음
    
    ***캐싱(Caching)이란?캐싱이란 한번 접근 후 또 요청할 시 빠르게 접근하기 위해 레지스터에 데이터를 저장시켜 놓는 것***
    
    </aside>
    
    <aside>
    💡 **POST방식**은 클라이언트가 서버로 데이터를 전송해 리소스를 추가하거나 생성하기 위해 사용되는 Method입니다.
    **POST 요청 시**
     HTTP 패킷의 헤더에 Body의 콘텐츠 타입을 명시하는 Content-Type 헤더 필드를 포함하고 HTTP 패킷의 Body에는 데이터를 담아서 서버로 전송합니다.
    
    </aside>
    
    <aside>
    ⛔ **POST 방식 특징**
    
    - 데이터들을 URL뒤에 붙여서 서버로 보내는 것이 아닌 Body에 담아서 전송
    - 요청 헤더의 Content-Type에 콘텐츠 타입을 명시
    - 데이터들이 URL에 노출되지 않기 때문에 GET 방식보다 상대적으로 보안적
    - 데이터들을 Body에 담기 때문에 서버로 보내는 데이터의 양은 제한 없음
    - URL에 데이터가 노출되지 않으므로 캐싱 불가
    - 클라이언트에서 인코딩, 서버에서 디코딩
    - 요청받는 시간제한 존재
    - 브라우저 히스토리에 기록이 남지 않음
    </aside>
    
</aside>
